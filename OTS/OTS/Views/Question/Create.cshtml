
@model OTS.Models.QuestionModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="text-left">
            <h4>New Question</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.InventoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.InventoryId, Model.AvailableInventories, new { htmlAttributes = new { @class = "form-control", required = "required", onchange = "FillSubInventories()" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SubInventoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SubInventoryId, Model.AvailableSubInventories, new { htmlAttributes = new { @class = "form-control", required = "required" }})
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NumberOfAnswers, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumberOfAnswers, new { htmlAttributes = new { @type = "number", @min = "2", @step = "1", @value = "2", @max="10", @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.NumberOfAnswers, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Question List", "Index")
</div>
<script type="text/javascript">
    $(document).ready(function() {
      
        $("#InventoryId").change(function () {
            var inventoryId = $('#InventoryId').val();
            $.ajax({
                url: '/Question/FillSubInventories?inventoryId=' + inventoryId,
                type: "GET",
                dataType: "JSON",
                data: { Inventory: inventoryId },
                success: function (subInventories) {
                    $("#SubInventoryId").html(""); // clear before appending new list
                    $.each(subInventories, function (i, subInventory) {
                        $("#SubInventoryId").append(
                            $('<option></option>').val(subInventory.SubInventoryID).html(subInventory.name));
                    });
                },
                error: function (x, status, error) {
                    alert(error);
                }
            });
        
        });
    });
</script>